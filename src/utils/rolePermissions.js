// Role-based permissions and access control
export const ROLES = {
  PARENT: 'PARENT',
  MANAGER: 'MANAGER', 
  TEACHER: 'TEACHER',
  REGULAR: 'REGULAR',
  CHILD: 'CHILD'
};

// Permission definitions
export const PERMISSIONS = {
  // Project permissions
  CREATE_PROJECT: 'CREATE_PROJECT',
  EDIT_PROJECT: 'EDIT_PROJECT',
  DELETE_PROJECT: 'DELETE_PROJECT',
  SHARE_PROJECT: 'SHARE_PROJECT',
  VIEW_SHARED_PROJECTS: 'VIEW_SHARED_PROJECTS',
  
  // Group permissions
  CREATE_GROUP: 'CREATE_GROUP',
  CREATE_MONITORING_GROUP: 'CREATE_MONITORING_GROUP',
  JOIN_GROUP: 'JOIN_GROUP',
  MANAGE_GROUP: 'MANAGE_GROUP',
  ACCESS_GROUP_MODULE: 'ACCESS_GROUP_MODULE',
  
  // Network permissions
  ADD_CHILDREN: 'ADD_CHILDREN',
  BECOME_SECONDARY_PARENT: 'BECOME_SECONDARY_PARENT',
  VIEW_ALL_CONNECTIONS: 'VIEW_ALL_CONNECTIONS',
  VIEW_PARENT_CONNECTIONS: 'VIEW_PARENT_CONNECTIONS',
  
  // Feedback permissions
  REQUEST_FEEDBACK: 'REQUEST_FEEDBACK',
  GIVE_FEEDBACK: 'GIVE_FEEDBACK',
  VIEW_FEEDBACK: 'VIEW_FEEDBACK',
  
  // Status permissions
  SUBMIT_STATUS: 'SUBMIT_STATUS',
  VIEW_STATUS_REPORTS: 'VIEW_STATUS_REPORTS',
  
  // Profile permissions
  EDIT_PROFILE: 'EDIT_PROFILE',
  MANAGE_PARENTS: 'MANAGE_PARENTS'
};

// Role permissions mapping
export const ROLE_PERMISSIONS = {
  [ROLES.PARENT]: [
    // Full access to all features
    PERMISSIONS.CREATE_PROJECT,
    PERMISSIONS.EDIT_PROJECT,
    PERMISSIONS.DELETE_PROJECT,
    PERMISSIONS.SHARE_PROJECT,
    PERMISSIONS.VIEW_SHARED_PROJECTS,
    PERMISSIONS.CREATE_GROUP,
    PERMISSIONS.CREATE_MONITORING_GROUP,
    PERMISSIONS.JOIN_GROUP,
    PERMISSIONS.MANAGE_GROUP,
    PERMISSIONS.ACCESS_GROUP_MODULE,
    PERMISSIONS.ADD_CHILDREN,
    PERMISSIONS.BECOME_SECONDARY_PARENT,
    PERMISSIONS.VIEW_ALL_CONNECTIONS,
    PERMISSIONS.REQUEST_FEEDBACK,
    PERMISSIONS.GIVE_FEEDBACK,
    PERMISSIONS.VIEW_FEEDBACK,
    PERMISSIONS.SUBMIT_STATUS,
    PERMISSIONS.VIEW_STATUS_REPORTS,
    PERMISSIONS.EDIT_PROFILE,
    PERMISSIONS.MANAGE_PARENTS
  ],
  
  [ROLES.MANAGER]: [
    // Cannot add children but can become secondary parent
    PERMISSIONS.CREATE_PROJECT,
    PERMISSIONS.EDIT_PROJECT,
    PERMISSIONS.DELETE_PROJECT,
    PERMISSIONS.SHARE_PROJECT,
    PERMISSIONS.VIEW_SHARED_PROJECTS,
    PERMISSIONS.CREATE_GROUP,
    PERMISSIONS.CREATE_MONITORING_GROUP,
    PERMISSIONS.JOIN_GROUP,
    PERMISSIONS.MANAGE_GROUP,
    PERMISSIONS.ACCESS_GROUP_MODULE,
    PERMISSIONS.BECOME_SECONDARY_PARENT,
    PERMISSIONS.VIEW_ALL_CONNECTIONS,
    PERMISSIONS.REQUEST_FEEDBACK,
    PERMISSIONS.GIVE_FEEDBACK,
    PERMISSIONS.VIEW_FEEDBACK,
    PERMISSIONS.SUBMIT_STATUS,
    PERMISSIONS.VIEW_STATUS_REPORTS,
    PERMISSIONS.EDIT_PROFILE,
    PERMISSIONS.MANAGE_PARENTS
  ],
  
  [ROLES.TEACHER]: [
    // Same as Manager
    PERMISSIONS.CREATE_PROJECT,
    PERMISSIONS.EDIT_PROJECT,
    PERMISSIONS.DELETE_PROJECT,
    PERMISSIONS.SHARE_PROJECT,
    PERMISSIONS.VIEW_SHARED_PROJECTS,
    PERMISSIONS.CREATE_GROUP,
    PERMISSIONS.CREATE_MONITORING_GROUP,
    PERMISSIONS.JOIN_GROUP,
    PERMISSIONS.MANAGE_GROUP,
    PERMISSIONS.ACCESS_GROUP_MODULE,
    PERMISSIONS.BECOME_SECONDARY_PARENT,
    PERMISSIONS.VIEW_ALL_CONNECTIONS,
    PERMISSIONS.REQUEST_FEEDBACK,
    PERMISSIONS.GIVE_FEEDBACK,
    PERMISSIONS.VIEW_FEEDBACK,
    PERMISSIONS.SUBMIT_STATUS,
    PERMISSIONS.VIEW_STATUS_REPORTS,
    PERMISSIONS.EDIT_PROFILE,
    PERMISSIONS.MANAGE_PARENTS
  ],
  
  [ROLES.REGULAR]: [
    // Cannot create monitoring groups
    PERMISSIONS.CREATE_PROJECT,
    PERMISSIONS.EDIT_PROJECT,
    PERMISSIONS.DELETE_PROJECT,
    PERMISSIONS.SHARE_PROJECT,
    PERMISSIONS.VIEW_SHARED_PROJECTS,
    PERMISSIONS.CREATE_GROUP,
    PERMISSIONS.JOIN_GROUP,
    PERMISSIONS.MANAGE_GROUP,
    PERMISSIONS.ACCESS_GROUP_MODULE,
    PERMISSIONS.BECOME_SECONDARY_PARENT,
    PERMISSIONS.VIEW_ALL_CONNECTIONS,
    PERMISSIONS.REQUEST_FEEDBACK,
    PERMISSIONS.GIVE_FEEDBACK,
    PERMISSIONS.VIEW_FEEDBACK,
    PERMISSIONS.SUBMIT_STATUS,
    PERMISSIONS.VIEW_STATUS_REPORTS,
    PERMISSIONS.EDIT_PROFILE,
    PERMISSIONS.MANAGE_PARENTS
  ],
  
  [ROLES.CHILD]: [
    // Restricted access
    PERMISSIONS.CREATE_PROJECT,
    PERMISSIONS.EDIT_PROJECT,
    PERMISSIONS.DELETE_PROJECT,
    PERMISSIONS.SHARE_PROJECT,
    PERMISSIONS.VIEW_SHARED_PROJECTS,
    PERMISSIONS.JOIN_GROUP,
    PERMISSIONS.REQUEST_FEEDBACK,
    PERMISSIONS.GIVE_FEEDBACK,
    PERMISSIONS.VIEW_FEEDBACK,
    PERMISSIONS.SUBMIT_STATUS,
    PERMISSIONS.VIEW_STATUS_REPORTS,
    PERMISSIONS.EDIT_PROFILE,
    PERMISSIONS.VIEW_PARENT_CONNECTIONS
  ]
};

// Helper functions
export const hasPermission = (userRole, permission) => {
  if (!userRole || !permission) return false;
  return ROLE_PERMISSIONS[userRole]?.includes(permission) || false;
};

export const canAccessModule = (userRole, module) => {
  const modulePermissions = {
    'projects': [PERMISSIONS.CREATE_PROJECT, PERMISSIONS.VIEW_SHARED_PROJECTS],
    'groups': [PERMISSIONS.ACCESS_GROUP_MODULE],
    'network': [PERMISSIONS.VIEW_ALL_CONNECTIONS, PERMISSIONS.VIEW_PARENT_CONNECTIONS],
    'feedback': [PERMISSIONS.REQUEST_FEEDBACK, PERMISSIONS.VIEW_FEEDBACK],
    'status': [PERMISSIONS.SUBMIT_STATUS, PERMISSIONS.VIEW_STATUS_REPORTS]
  };
  
  const requiredPermissions = modulePermissions[module] || [];
  return requiredPermissions.some(permission => hasPermission(userRole, permission));
};

export const getRoleDisplayName = (role) => {
  const displayNames = {
    [ROLES.PARENT]: 'Parent',
    [ROLES.MANAGER]: 'Manager',
    [ROLES.TEACHER]: 'Teacher', 
    [ROLES.REGULAR]: 'Regular',
    [ROLES.CHILD]: 'Child'
  };
  return displayNames[role] || role;
};

export const getRoleRestrictions = (role) => {
  const restrictions = {
    [ROLES.PARENT]: 'Full access to all features',
    [ROLES.MANAGER]: 'Cannot add children but can become secondary parent',
    [ROLES.TEACHER]: 'Cannot add children but can become secondary parent',
    [ROLES.REGULAR]: 'Cannot create monitoring groups',
    [ROLES.CHILD]: 'Cannot access Groups module, restricted Network and Parent views'
  };
  return restrictions[role] || 'No restrictions defined';
};
